//===== ===== ===== ===== =====
//  Colors
//##
$increments : 5;
$factor : 8.38;

$basic-colors : (
	red: #f44336,
	pink: #e91e63,
	purple: #9c27b0,
	deep-purple: #673ab7,
	indigo: #3f51b5,
	blue: #2196f3,
	light-blue: #03a9f4,
	cyan: #00bcd4,
	teal: #009688,
	green: #4caf50,
	light-green: #8bc34a,
	lime: #cddc39,
	yellow: #ffeb3b,
	amber: #ffc107,
	orange: #ff9800,
	deep-orange: #ff5722,
	brown: #795548,
	grey: #9e9e9e,
	blue-grey: #607d8b
);

@function color-darken($color, $value) {
	$__result : darken($color, $factor * $value);
	$__result : desaturate($__result, $factor * $value);
	@return $__result;
}

@function color-lighten($color, $value) {
	$__result : lighten($color, $factor * $value);
	$__result : saturate($__result, $factor * $value);
	@return $__result;
}

@function getDarkenColors($base) {
	$result : ();
	@for $i from 1 through $increments {
		$result : append($result, color-darken($base, $i));
	}
	@return $result;
}

@function getLightenColors($base) {
	$result : ();
	@for $i from 1 through $increments {
		$result : append($result, color-lighten($base, $i));
	}
	@return $result;
}

@function getColorMap() {
	$result : ();
	@each $colorName, $colorValue in $basic-colors {
		$result : map-merge($result, ($colorName:(
			base: $colorValue,
			darken: getDarkenColors($colorValue),
			lighten: getLightenColors($colorValue)
		)))
	}
	@return $result;
}

@each $colorName, $colorData in getColorMap() {
	.#{$colorName} {
		background-color : map_get($colorData, base) !important;
		@for $i from 1 through $increments {
			&.lighten-#{$i} {
				background-color : nth(map_get($colorData, lighten), $i) !important;
			}
			&.darken-#{$i} {
				background-color : nth(map_get($colorData, darken), $i) !important;
			}
		}
	}
	.#{$colorName}-text {
		color : map_get($colorData, base) !important;
		@for $i from 1 through $increments {
			&.text-lighten-#{$i} {
				color : nth(map_get($colorData, lighten), $i) !important;
			}
			&.text-darken-#{$i} {
				color : nth(map_get($colorData, darken), $i) !important;
			}
		}
	}
}

@function getColor($color) {
	$colorMap : map_get(getColorMap(), $color);
	@return map_get($colorMap, base);
}

@function getLightColor($color,$value) {
	$colorMap : map_get(getColorMap(), $color);
	$colorList : map_get($colorMap, lighten);
	@return nth($colorList, $value);
}

@function getDarkColor($color,$value) {
	$colorMap : map_get(getColorMap(), $color);
	$colorList : map_get($colorMap, darken);
	@return nth($colorList, $value);
}
